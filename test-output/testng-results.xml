<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="2" passed="1">
  <reporter-output>
    <line>
      <![CDATA[RegressionSuite---->suite started]]>
    </line>
    <line>
      <![CDATA[SmokeTest---->Smoketest block started]]>
    </line>
    <line>
      <![CDATA[testvalidLogin---->test method is started]]>
    </line>
    <line>
      <![CDATA[testvalidLogin---->test method is failed]]>
    </line>
    <line>
      <![CDATA[testInValidLogin---->test method is started]]>
    </line>
    <line>
      <![CDATA[testInValidLogin---->test method is passed]]>
    </line>
  </reporter-output>
  <suite name="RegressionSuite" duration-ms="53458" started-at="2020-01-12T10:06:19Z" finished-at="2020-01-12T10:07:13Z">
    <groups>
    </groups>
    <test name="SmokeTest" duration-ms="53458" started-at="2020-01-12T10:06:19Z" finished-at="2020-01-12T10:07:13Z">
      <class name="Scriptspackage.TestValidLogin">
        <test-method status="PASS" signature="setUp()[pri:0, instance:Scriptspackage.TestValidLogin@212bf671]" name="setUp" is-config="true" duration-ms="13163" started-at="2020-01-12T10:06:19Z" finished-at="2020-01-12T10:06:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="FAIL" signature="testvalidLogin()[pri:0, instance:Scriptspackage.TestValidLogin@212bf671]" name="testvalidLogin" duration-ms="3552" started-at="2020-01-12T10:06:32Z" finished-at="2020-01-12T10:06:36Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[focebilly failing]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: focebilly failing
at org.testng.Assert.fail(Assert.java:96)
at Scriptspackage.TestValidLogin.testvalidLogin(TestValidLogin.java:27)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[testvalidLogin---->test method is started]]>
            </line>
            <line>
              <![CDATA[testvalidLogin---->test method is failed]]>
            </line>
          </reporter-output>
        </test-method> <!-- testvalidLogin -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Scriptspackage.TestValidLogin@212bf671]" name="tearDown" is-config="true" duration-ms="4233" started-at="2020-01-12T10:06:36Z" finished-at="2020-01-12T10:06:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testvalidLogin status=FAILURE method=TestValidLogin.testvalidLogin()[pri:0, instance:Scriptspackage.TestValidLogin@212bf671] output=testvalidLogin---->test method is started]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- Scriptspackage.TestValidLogin -->
      <class name="Scriptspackage.TestInValidLogin">
        <test-method status="PASS" signature="setUp()[pri:0, instance:Scriptspackage.TestInValidLogin@14a2f921]" name="setUp" is-config="true" duration-ms="17550" started-at="2020-01-12T10:06:40Z" finished-at="2020-01-12T10:06:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testInValidLogin()[pri:0, instance:Scriptspackage.TestInValidLogin@14a2f921]" name="testInValidLogin" duration-ms="14699" started-at="2020-01-12T10:06:58Z" finished-at="2020-01-12T10:07:12Z">
          <reporter-output>
            <line>
              <![CDATA[testInValidLogin---->test method is started]]>
            </line>
            <line>
              <![CDATA[testInValidLogin---->test method is passed]]>
            </line>
          </reporter-output>
        </test-method> <!-- testInValidLogin -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Scriptspackage.TestInValidLogin@14a2f921]" name="tearDown" is-config="true" duration-ms="184" started-at="2020-01-12T10:07:12Z" finished-at="2020-01-12T10:07:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testInValidLogin status=SUCCESS method=TestInValidLogin.testInValidLogin()[pri:0, instance:Scriptspackage.TestInValidLogin@14a2f921] output=testInValidLogin---->test method is started]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- Scriptspackage.TestInValidLogin -->
    </test> <!-- SmokeTest -->
  </suite> <!-- RegressionSuite -->
</testng-results>
